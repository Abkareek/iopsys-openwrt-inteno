#!/bin/sh

. /lib/functions.sh
. /usr/share/libubox/jshn.sh

wifibutton_action() {
        local bten="$(uci -q get boardpanel.settings.wifibutton)"
        [ "$bten" == "0" ] && return
	local wlstatus="$(uci -q get wireless.status.wlan)"
	if [ "$wlstatus" == "0" ]; then
		uci -q set wireless.status.wlan="1"
	else
		uci -q set wireless.status.wlan="0"
	fi
	uci commit wireless
	killall -9 wifi 2>/dev/null
	/sbin/wifi &
}

wpsbutton_action () {
	local bten="$(uci -q get boardpanel.settings.wpsbutton)"
	[ "$bten" == "0" ] && return
        killall -USR2 wps_monitor
}

infobutton_action() {
	local parsed=$(ubus call leds status)
	json_load "$parsed"
	json_get_var ledstate state

	[ "$ledstate" == "normal" ] && {
		ubus call leds set '{"state": "info"}'
		ubus call led.eco set '{"state": "notice"}'
	} || {
		ubus call leds set '{"state": "normal"}'
		ubus call led.eco set '{"state": "off"}'
	}
}

case "$ACTION" in
        add|register)
        [ "resetbutton" == "$INTERFACE" ] && {
		/sbin/defaultreset
        }
        [ "ecobutton" == "$INTERFACE" -o "wifibutton" == "$INTERFACE" ] && {
		wifibutton_action
        }
        [ "wpsbutton" == "$INTERFACE" ] && {
	        printf "\n\nWPS button is pressed\n\n" > /dev/console
		wpsbutton_action
        }
        [ "dectshort" == "$INTERFACE" ] && {
		/usr/bin/dect -b 1 | logger -t hotplug -p user.info
        }
        [ "dectlong" == "$INTERFACE" ] && {
		case $(uci get dect.dect.radio) in
			auto|off)
				uci set dect.dect.radio=on
				;;
			on)
				uci set dect.dect.radio=off
				;;
		esac
		/usr/bin/dect -c | logger -t hotplug -p user.info
		/usr/bin/dect -b 2 | logger -t hotplug -p user.info
        }
	[ "pairbutton" == "$INTERFACE" ] && {
		printf "\n\nPair button pressed\n\n" > /dev/console
		wpsbutton_action
		/usr/bin/dect -b 1 | logger -t hotplug -p user.info
	}
        [ "infobutton" == "$INTERFACE" ] && {
                printf "\n\nINFO button is pressed\n\n" > /dev/console
		infobutton_action
        }
	[ "communicationbutton" == "$INTERFACE" ] && {
		printf "\n\nCommunication button pressed - not implemented!\n\n" > /dev/console
	}
	[ "servicebutton" == "$INTERFACE" ] && {
		printf "\n\nService button pressed - not implemented!\n\n" > /dev/console
	}
	[ "cancelbutton" == "$INTERFACE" ] && {
		printf "\n\nCancel button pressed - not implemented!\n\n" > /dev/console
	}
	[ "touch_near" == "$INTERFACE" ] && {
	        ubus call leds proximity '{ "timeout" : "15", "light-all" : "2" }'
	}
	[ "touch_far" == "$INTERFACE" ] && {
	        ubus call leds proximity '{ "timeout" : "300" }'
	}
        ;;
        remove|unregister)
        ;;
esac
