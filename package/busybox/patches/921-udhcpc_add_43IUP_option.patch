--- a/networking/udhcp/dhcpc.c	2013-10-09 12:28:42.284165651 +0200
+++ b/networking/udhcp/dhcpc.c	2013-10-09 12:31:47.424171991 +0200
@@ -102,6 +102,7 @@
 	[OPTION_STATIC_ROUTES   ] = sizeof("255.255.255.255/32 255.255.255.255 "),
 	[OPTION_6RD             ] = sizeof("32 128 FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF 255.255.255.255 "),
 	[OPTION_STRING          ] = 1,
+	[OPTION_OPTION43 	] = 1,
 	[OPTION_STRING_HOST     ] = 1,
 #if ENABLE_FEATURE_UDHCP_RFC3397
 	[OPTION_DNS_STRING      ] = 1, /* unused */
@@ -215,7 +216,7 @@
 static NOINLINE char *xmalloc_optname_optval(uint8_t *option, const struct dhcp_optflag *optflag, const char *opt_name)
 {
 	unsigned upper_length;
-	int len, type, optlen;
+	int len, type, optlen,dynlen;
 	char *dest, *ret;
 
 	/* option points to OPT_DATA, need to go back and get OPT_LEN */
@@ -260,6 +261,39 @@
 			dest += sprintf(dest, type == OPTION_U32 ? "%lu" : "%ld", (unsigned long) ntohl(val_u32));
 			break;
 		}
+		case OPTION_OPTION43:
+		  //check if its a vendor "Encapsulated vendor-specific options" if not jump to normal string handling
+		  if(*(option)=='\x01'){
+		  /*  When encapsulated vendor-specific extensions are used, the
+		  information bytes 1-n have the following format:
+
+		* Code   Len   Data item        Code   Len   Data item       Code
+		* +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
+		* |  T1 |  n  |  d1 |  d2 | ... |  T2 |  n  |  D1 |  D2 | ... | ... |
+		* +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
+			*/
+		  
+			dynlen=0;
+		    while(dynlen<len){
+			dynlen+=*(option+1);			
+			option+=2;
+			dynlen+=2;
+			memcpy(dest, option, *(option-1));
+			dest+=*(option-1);
+			option+=*(option-1);
+			//check that we have some vendor strings left
+			if(dynlen<len){
+			  dest += sprintf(dest, ",");
+			}
+			//else add end tag
+			else{
+			 
+			dest +=sprintf(dest, "%c",'\0');    
+                        }
+		
+		      }
+		return ret;	 /* Short circuit this case */
+		 }
 		case OPTION_STRING:
 		case OPTION_STRING_HOST:
 			memcpy(dest, option, len);
--- a/networking/udhcp/common.c	2013-10-09 12:42:30.332194000 +0200
+++ b/networking/udhcp/common.c	2013-10-09 12:57:39.868225139 +0200
@@ -23,7 +23,7 @@
 	{ OPTION_IP                   | OPTION_REQ, 0x01 }, /* DHCP_SUBNET        */
 	{ OPTION_S32                              , 0x02 }, /* DHCP_TIME_OFFSET   */
 	{ OPTION_IP | OPTION_LIST     | OPTION_REQ, 0x03 }, /* DHCP_ROUTER        */
-//	{ OPTION_IP | OPTION_LIST                 , 0x04 }, /* DHCP_TIME_SERVER   */
+	{ OPTION_IP | OPTION_LIST                 , 0x04 }, /* DHCP_TIME_SERVER   */
 //	{ OPTION_IP | OPTION_LIST                 , 0x05 }, /* DHCP_NAME_SERVER   */
 	{ OPTION_IP | OPTION_LIST     | OPTION_REQ, 0x06 }, /* DHCP_DNS_SERVER    */
 //	{ OPTION_IP | OPTION_LIST                 , 0x07 }, /* DHCP_LOG_SERVER    */
@@ -46,21 +46,23 @@
 	{ OPTION_IP                               , 0x36 }, /* DHCP_SERVER_ID     */
 	{ OPTION_STRING                           , 0x38 }, /* DHCP_ERR_MESSAGE   */
 //TODO: must be combined with 'sname' and 'file' handling:
-	{ OPTION_STRING_HOST                      , 0x42 }, /* DHCP_TFTP_SERVER_NAME */
-	{ OPTION_STRING                           , 0x43 }, /* DHCP_BOOT_FILE     */
+	{ OPTION_OPTION43  | OPTION_REQ           , 0x2b }, /* Option 43   vendor specifick  Information            */
+	{ OPTION_STRING_HOST  | OPTION_REQ        , 0x42 }, /* DHCP_TFTP_SERVER_NAME */
+	{ OPTION_STRING      |   OPTION_REQ       , 0x43 }, /* DHCP_BOOT_FILE     */
 //TODO: not a string, but a set of LASCII strings:
 //	{ OPTION_STRING                           , 0x4D }, /* DHCP_USER_CLASS    */
 #if ENABLE_FEATURE_UDHCP_RFC3397
 	{ OPTION_DNS_STRING | OPTION_LIST         , 0x77 }, /* DHCP_DOMAIN_SEARCH */
 	{ OPTION_SIP_SERVERS                      , 0x78 }, /* DHCP_SIP_SERVERS   */
 #endif
-	{ OPTION_STATIC_ROUTES                    , 0x79 }, /* DHCP_STATIC_ROUTES */
+	{ OPTION_STATIC_ROUTES    | OPTION_REQ     , 0x79 }, /* DHCP_STATIC_ROUTES */
+	{ OPTION_STRING   | OPTION_REQ             , 0x80 }, /* TFPT Server IP address. Will be a HTTP URL IN IUP       */
 #if ENABLE_FEATURE_UDHCP_8021Q
-	{ OPTION_U16                              , 0x84 }, /* DHCP_VLAN_ID       */
-	{ OPTION_U8                               , 0x85 }, /* DHCP_VLAN_PRIORITY */
+	{ OPTION_U16  | OPTION_REQ                 , 0x84 }, /* DHCP_VLAN_ID       */
+	{ OPTION_U8   | OPTION_REQ                 , 0x85 }, /* DHCP_VLAN_PRIORITY */
 #endif
 	{ OPTION_STATIC_ROUTES                    , 0xf9 }, /* DHCP_MS_STATIC_ROUTES */
-	{ OPTION_6RD                              , 0xd4 }, /* DHCP_6RD (RFC)     */
+	{ OPTION_6RD | OPTION_REQ                 , 0xd4 }, /* DHCP_6RD (RFC)     */
 	{ OPTION_6RD                              , 0x96 }, /* DHCP_6RD (Comcast) */
 	{ OPTION_STRING                           , 0xfc }, /* DHCP_WPAD          */
 
@@ -90,7 +92,7 @@
 	"subnet" "\0"      /* DHCP_SUBNET         */
 	"timezone" "\0"    /* DHCP_TIME_OFFSET    */
 	"router" "\0"      /* DHCP_ROUTER         */
-//	"timesrv" "\0"     /* DHCP_TIME_SERVER    */
+	"timesrv" "\0"     /* DHCP_TIME_SERVER    */
 //	"namesrv" "\0"     /* DHCP_NAME_SERVER    */
 	"dns" "\0"         /* DHCP_DNS_SERVER     */
 //	"logsrv" "\0"      /* DHCP_LOG_SERVER     */
@@ -112,6 +114,7 @@
 	"lease" "\0"       /* DHCP_LEASE_TIME     */
 	"serverid" "\0"    /* DHCP_SERVER_ID      */
 	"message" "\0"     /* DHCP_ERR_MESSAGE    */
+	"vendorspecinf" "\0" /* Option 43   vendor specifick  Information*/
 	"tftp" "\0"        /* DHCP_TFTP_SERVER_NAME */
 	"bootfile" "\0"    /* DHCP_BOOT_FILE      */
 //	"userclass" "\0"   /* DHCP_USER_CLASS     */
@@ -124,6 +127,7 @@
 // doesn't work in udhcpd.conf since OPTION_STATIC_ROUTES
 // is not handled yet by "string->option" conversion code:
 	"staticroutes" "\0"/* DHCP_STATIC_ROUTES  */
+	"httpurl128" "\0"        /* TFPT Server IP address. Will be a HTTP URL IN IUP            */
 #if ENABLE_FEATURE_UDHCP_8021Q
 	"vlanid" "\0"      /* DHCP_VLAN_ID        */
 	"vlanpriority" "\0"/* DHCP_VLAN_PRIORITY  */
@@ -146,6 +150,7 @@
 	[OPTION_IP] =      4,
 	[OPTION_IP_PAIR] = 8,
 //	[OPTION_BOOLEAN] = 1,
+	[OPTION_OPTION43]= 1,
 	[OPTION_STRING] =  1,  /* ignored by udhcp_str2optset */
 	[OPTION_STRING_HOST] = 1,  /* ignored by udhcp_str2optset */
 #if ENABLE_FEATURE_UDHCP_RFC3397
--- a/networking/udhcp/common.h	2013-10-09 12:55:29.612220678 +0200
+++ b/networking/udhcp/common.h	2013-10-09 12:56:20.192222411 +0200
@@ -82,6 +82,7 @@
 	OPTION_STRING,
 	/* Opts of STRING_HOST type will be sanitized before they are passed
 	 * to udhcpc script's environment: */
+	OPTION_OPTION43,
 	OPTION_STRING_HOST,
 //	OPTION_BOOLEAN,
 	OPTION_U8,
