@version:3.0
include "/etc/syslog-ng.remote.conf";
include "/etc/syslog-ng.user.conf";
options{
	create_dirs(yes);
	flush_lines(0);
	keep_hostname(yes);
	log_fifo_size(1024);
	log_msg_size(1024);
	stats_freq(0);
	flush_lines(0);
	use_fqdn(no);
	group(root);
	owner(root);
	perm(0750);
};

######### source #####################
#####################################

source local {
	internal();
	unix-stream("/dev/log");
};

source kernel {
	file("/proc/kmsg" program_override("kernel"));
};

###### dest #######################
###################################

## local
destination messages {
	file("/log/messages");
};

## dns masq debug
destination dns_debug {
        file("/log/dns_debug");
};
## upnp
destination upnp_debug {
        file("/log/upnp_debug");
        };


##################################

### filters ######################

#################################


filter f_notlog {
        not program("asterisk")
        and not match ("uci: Entry not found" value(MESSAGE))
        and not match ("Error writing to page 7f00000" value(MESSAGE))
        and not match ("Attempt to write not page aligned data" value(MESSAGE))
        and not match ("flush_memcet Error writing to page" value(MESSAGE))
        and not match ("read /etc/hosts" value(MESSAGE))
        and not match ("read /tmp/hosts/6relayd" value(MESSAGE))
        and not match ("read /etc/ethers" value(MESSAGE))
        and not program("ice")
        and not filter(f_dns_masq_ok)
        and not filter(f_upnp)
        ;
};

filter f_dns_masq {
        program("dnsmasq")
        ;
};
filter f_dns_masq_ok {
        program("dnsmasq")
        and match ("query|forwarded|reply|cached" value(MESSAGE))
        ;
};
filter f_upnp {
        program("miniupnpd");
};

filter f_drop {
        match("drop" value(MESSAGE));
};




###############################

log {
	source(local);
	source(kernel);
	filter(f_notlog);
	destination(messages);
};
log {
        source(local);
        filter(f_dns_masq);
        destination(dns_debug);
};
log {
        source(local);
        filter(f_upnp);
        destination(upnp_debug);
};



###############    end   ###################
