#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by udhcpc" && exit 1

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh

set_classless_routes() {
	local max=128
	local type
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		proto_add_ipv4_route "${1%%/*}" "${1##*/}" "$2"
		max=$(($max-1))
		shift 2
	done
}

conver_to_hex() {
	local hex fullhex fch
	case "${1:0:1}" in
	       [0-9]|[a-z]|[A-Z]) fch="" ;;
	       .|,|:|;|/) fch="" ;;
	       *) fch="0a" ;;
	esac
	for hex in $(echo -n $1 | xxd -ps); do
		fullhex=$fullhex$hex
	done
	echo $fch$fullhex | sed 's/[[:xdigit:]]\{2\}/:&/g' | awk -F'^:' '{print$2}'
}

pass_to_lan() {
	local ntpsrvs="$1"
	local vndsinf="$2"
	local httpurl="$3"
	local opt241="$4"
	local restart="0"

	# pass NTP Servers
	if [ -n "$ntpsrvs" ] && [ "$ntpsrvs" != "0" ]; then
		new_ntpsrv=$(echo $ntpsrvs | tr ' ' ',')
		old_ntpsrv=$(uci get dhcp.@dnsmasq[0].dhcp_option |  egrep -o "42,.*" | awk '{print$1}')
		if [ "$old_ntpsrv" != "42,$new_ntpsrv" ]; then
			uci del_list dhcp.@dnsmasq[0].dhcp_option="$old_ntpsrv"
			uci add_list dhcp.@dnsmasq[0].dhcp_option="42,$new_ntpsrv"
			restart="1"
		fi
	fi

	# pass Vendor Specific Information
	if [ -n "$vndsinf" ] && [ "$vndsinf" != "0" ]; then
		new_vndsinf=$(conver_to_hex $vndsinf)
		old_vndsinf=$(uci get dhcp.@dnsmasq[0].dhcp_option |  egrep -o "43,.*" | awk '{print$1}')
		if [ "$old_vndsinf" != "43,$new_vndsinf" ]; then
			uci del_list dhcp.@dnsmasq[0].dhcp_option="$old_vndsinf"
			uci add_list dhcp.@dnsmasq[0].dhcp_option="43,$new_vndsinf"
			restart="1"
		fi
	fi

	# pass Bootcast Address
	if [ -n "$httpurl" ] && [ "$httpurl" != "0" ]; then
		new_httpurl=$(conver_to_hex $httpurl)
		old_httpurl=$(uci get dhcp.@dnsmasq[0].dhcp_option |  egrep -o "128,.*" | awk '{print$1}')
		if [ "$old_httpurl" != "128,$new_httpurl" ]; then
			uci del_list dhcp.@dnsmasq[0].dhcp_option="$old_httpurl"
			uci add_list dhcp.@dnsmasq[0].dhcp_option="128,$new_httpurl"
			restart="1"
		fi
	fi

	# pass IPTVMon Configuration
	if [ -n "$opt241" ] && [ "$opt241" != "0" ]; then
		new_opt241=$(conver_to_hex $opt241)
		old_opt241=$(uci get dhcp.@dnsmasq[0].dhcp_option |  egrep -o "241,.*" | awk '{print$1}')
		if [ "$old_opt241" != "241,$new_opt241" ]; then
			uci del_list dhcp.@dnsmasq[0].dhcp_option="$old_opt241"
			uci add_list dhcp.@dnsmasq[0].dhcp_option="241,$new_opt241"
			restart="1"
		fi
	fi

	if [ "$restart" == "1" ]; then
		uci commit dhcp
		/etc/init.d/dnsmasq restart &
	fi
}

setup_interface () {
	proto_init_update "*" 1
	proto_add_ipv4_address "$ip" "${subnet:-255.255.255.0}"
	# TODO: apply $broadcast

	for i in $router; do
		proto_add_ipv4_route 0.0.0.0 0 "$i"
	done

	# CIDR STATIC ROUTES (rfc3442)
	[ -n "$staticroutes" ] && set_classless_routes $staticroutes
	[ -n "$msstaticroutes" ] && set_classless_routes $msstaticroutes

	for dns in $dns; do
		proto_add_dns_server "$dns"
	done
	for domain in $domain; do
		proto_add_dns_search "$domain"
	done
	proto_send_update "$INTERFACE"

	if [ -n "$IFACE6RD" -a -n "$ip6rd" ]; then
		local v4mask="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdprefixlen="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdprefix="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdbr="${ip6rd%% *}"

uci -q batch <<-EOF >/dev/null
set network.$IFACE6RD.proto=6rd
set network.$IFACE6RD.auto=0
set network.$IFACE6RD.peeraddr=$ip6rdbr
set network.$IFACE6RD.ip4prefixlen=$v4mask
set network.$IFACE6RD.ip6prefix=$ip6rdprefix
set network.$IFACE6RD.ip6prefixlen=$ip6rdprefixlen
commit network
EOF

		ifdown "$IFACE6RD"
		/etc/init.d/network reload
		ifup "$IFACE6RD"
	fi

	[ "$INTERFACE" == "iptv" ] && pass_to_lan "${ntpsrv:-0}" "${vendorspecinf:-0}" "${httpurl128:-0}" "${privopt241:-0}"
	[ -f /etc/config/provisioning ] && iup

	# TODO
	# [ -n "$ntpsrv" ] && 	change_state network "$ifc" lease_ntpsrv "$ntpsrv"
	# [ -n "$timesvr" ] && 	change_state network "$ifc" lease_timesrv "$timesvr"
	# [ -n "$hostname" ] &&	change_state network "$ifc" lease_hostname "$hostname"
	# [ -n "$timezone" ] && change_state network "$ifc" lease_timezone "$timezone"
}

iup() {
	local url
	local provisioningcode
	local rest

	if [ $vendorspecinf ]; then
		url=${vendorspecinf%%,*}; rest=${vendorspecinf#*,}
		provisioningcode=${rest%%,*};
		uci_set_state provisioning iup url "$url"
		uci_set_state provisioning iup provisioningcode "$provisioningcode"
	elif [ $httpurl128 ]; then
		uci_set_state provisioning iup url "$httpurl128"
	elif [ $tftp ]; then
		if [ ${bootfile:0:1} == '/' ]; then 
			uci_set_state provisioning iup url "tftp://$tftp$bootfile"
		else
			uci_set_state provisioning iup url "tftp://$tftp/$bootfile"
		fi
	fi
}

deconfig_interface() {
	proto_init_update "*" 0
	proto_send_update "$INTERFACE"
}

case "$1" in
	deconfig)
		deconfig_interface
	;;
	renew|bound)
		setup_interface
	;;
esac

# user rules
[ -f /etc/udhcpc.user ] && . /etc/udhcpc.user

exit 0
